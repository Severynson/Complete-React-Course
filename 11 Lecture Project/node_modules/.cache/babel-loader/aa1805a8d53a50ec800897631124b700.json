{"ast":null,"code":"import CartContext from \"./cart-context\";\nimport { useReducer } from \"react\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedItems = state.items.concat(action.item);\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n}; // const cartReducer = (state, action) => {\n//     if (action.type === 'ADD') {\n//         const updatedItems = state.items.concat(action.item);\n//         const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n//         return {\n//             items: updatedTotalAmount,\n//             totalAmount: updatedTotalAmount\n//         }\n//     }\n//     return defaultCartState;\n// };\n// const CartProvider = (props) => {\n//     const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n//     const addItemToCartHandler= (item) => {\n//         dispatchCartAction({type: 'ADD', item: item})\n//     };\n//     const removeItemFromCartHandler = (id) => {\n//         dispatchCartAction({type: 'REMOVE', id: id})\n//     };\n//     const cartContext = {\n//         items: cartState.items,\n//         totalAmount: cartState.totalAmount,\n//         addItem: addItemToCartHandler,\n//         removeItem: removeItemFromCartHandler\n//     }\n//     return <CartContext.Provider value={cartContext}>\n//         {props.children}\n//     </CartContext.Provider>\n// };\n// export default CartProvider;","map":{"version":3,"sources":["C:/Users/sever/Desktop/Programing files/Complete-React-Course/11 Lecture Project/src/store/CartProvider.js"],"names":["CartContext","useReducer","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedItems","concat","item","updatedTotalAmount","price","amount"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,gBAAxB;AACA,SAASC,UAAT,QAA2B,OAA3B;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAE,EADc;AAErBC,EAAAA,WAAW,EAAE;AAFQ,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzB,UAAMC,YAAY,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAArB;AACA,UAAMC,kBAAkB,GAAGN,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYE,KAAZ,GAAoBN,MAAM,CAACI,IAAP,CAAYG,MAA/E;AACA,WAAO;AACLX,MAAAA,KAAK,EAAEM,YADF;AAELL,MAAAA,WAAW,EAAEQ;AAFR,KAAP;AAID;;AACD,SAAOV,gBAAP;AACD,CAVD,C,CAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA","sourcesContent":["import CartContext from \"./cart-context\";\r\nimport { useReducer } from \"react\";\r\n\r\nconst defaultCartState = {\r\n    items: [],\r\n    totalAmount: 0\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === 'ADD') {\r\n    const updatedItems = state.items.concat(action.item);\r\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount\r\n    };\r\n  }\r\n  return defaultCartState;\r\n};\r\n// const cartReducer = (state, action) => {\r\n//     if (action.type === 'ADD') {\r\n//         const updatedItems = state.items.concat(action.item);\r\n//         const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\r\n//         return {\r\n//             items: updatedTotalAmount,\r\n//             totalAmount: updatedTotalAmount\r\n//         }\r\n//     }\r\n//     return defaultCartState;\r\n// };\r\n\r\n// const CartProvider = (props) => {\r\n//     const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\r\n\r\n//     const addItemToCartHandler= (item) => {\r\n//         dispatchCartAction({type: 'ADD', item: item})\r\n//     };\r\n\r\n//     const removeItemFromCartHandler = (id) => {\r\n//         dispatchCartAction({type: 'REMOVE', id: id})\r\n//     };\r\n\r\n//     const cartContext = {\r\n//         items: cartState.items,\r\n//         totalAmount: cartState.totalAmount,\r\n//         addItem: addItemToCartHandler,\r\n//         removeItem: removeItemFromCartHandler\r\n//     }\r\n\r\n//     return <CartContext.Provider value={cartContext}>\r\n//         {props.children}\r\n//     </CartContext.Provider>\r\n// };\r\n\r\n// export default CartProvider;"]},"metadata":{},"sourceType":"module"}